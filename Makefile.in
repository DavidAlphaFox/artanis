TOP := $(shell pwd)
INCLUDES := -I$(TOP)
CFLAGS := @GUILE_CFLAGS@ -fPIC -MD -DHAVE_CONFIG_H $(INCLUDES)
LIBS := @GUILE_LIBS@ -shared
LDFLAGS := @GUILE_LDFLAGS@ -fPIC -shared
CC := @CC@
OBJ := obj
MOD := @srcdir@/artanis
MOD_OBJ := $(OBJ)/artanis
BIN_OBJ := $(OBJ)/bin
TEMP_LIB_PATH := $(shell pwd)/$(OBJ)
MOD_PATH := $(shell guile -c "(display (%site-dir))")
MOD_COMPILED_PATH := $(shell guile -c "(display (%site-ccache-dir))")
MOD_TARGET_PATH := $(MOD_COMPILED_PATH)
GUILEC := GUILE_LOAD_COMPILED_PATH=$(TEMP_LIB_PATH) guild compile
ARTANIS_ETC := @srcdir@/etc/artanis
ARTANIS_PAGES := @srcdir@/pages
GUILE := @GUILE@
VERSION := @PACKAGE_VERSION@
PREFIX := @prefix@
INSTALL := install -c
HEADER := @srcdir@/.HEAD
DOCS := @srcdir@/docs
DOCS_OBJ := $(OBJ)/docs/
MANUALS := $(DOCS_OBJ)/manuals/
TEXI_SRC := $(DOCS)/artanis.texi
BUILD_AUX := @srcdir@/build-aux
GENDOCS :=$(BUILD_AUX)/gendocs.sh
CHK_TEXINFO := $(BUILD_AUX)/check_texinfo.scm
CP := cp -frd -P
INFO_DIR := $(PREFIX)/share/info/
TARBALL_NAME := artanis-$(VERSION)
TMP_DIR := $(shell mktemp -d)
V := @

mod-sfile := $(shell find $(MOD) -name *.scm)
mod-ofile := $(mod-sfile:.scm=.go)
mod-ofile := $(subst $(MOD)/,$(MOD_OBJ)/,$(mod-ofile))

ALL_TARGETS :=  version \
		modules

all: $(ALL_TARGETS)

$(MOD_OBJ)/%.go: $(MOD)/%.scm
	@echo + compiling $<
	@mkdir -p $(@D)
	$(V)$(GUILEC) -L $(TOP) -o $@ $< 1>> build.log 2>> build.err

$(MOD_OBJ)/version.go: $(MOD)/version.scm
	@echo + compiling $<
	@mkdir -p $(@D)
	$(V)$(GUILEC) -L $(TOP) -o $@ $< 1> build.log 2> build.err

$(MOD)/version.scm:
	@echo "Regenerating artanis/version.scm"
	$(V) -rm -f $@
	$(V) cat $(HEADER) > $@
	$(V)$(GUILE) -c '(let ((port (open-file "$@" "a")))(format port "(define-module (artanis version) #:export (artanis-version)) (define artanis-version \"GNU Artanis-~a\")~%" "$(VERSION)"))'

.PHONY: release prepare clean modules install distclean distclean-mk bin version test docs

release: $(TARBALL_NAME).tar.bz2

prepare:
	$(V) $(MAKE) clean
	$(V) rm -fr $(TARBALL_NAME)
	$(V) cp -fr $(TOP)/* $(TMP_DIR)
	$(V) rm -fr $(TMP_DIR)/.git
	$(V) mv $(TMP_DIR) $(TOP)/$(TARBALL_NAME)

$(TARBALL_NAME).tar.bz2:
	$(V) $(MAKE) prepare
	$(V) tar cjf $@ $(TARBALL_NAME)
	$(V) rm -fr $(TMP_DIR) $(TOP)/$(TARBALL_NAME)

clean:
	-rm -fr $(OBJ)
	-rm -f *.log
	-rm -f *.err
	-rm -f *.info
	-rm -rf autom4te.cache
	-rm -f $(MOD)/version.scm
	find . -name "*~" -exec rm {} \;

clean-config:
	-rm -f config.{h,log}
	-rm -f configure

install: $(ALL_TARGETS)
	$(CP) $(MOD) $(MOD_PATH)
	mkdir -p $(MOD_TARGET_PATH)
	$(CP) $(MOD_OBJ) $(MOD_TARGET_PATH)
	$(CP) $(ARTANIS_ETC) /etc
	$(CP) $(ARTANIS_PAGES) /etc/artanis
	$(CP) artanis.info $(INFO_DIR)

distclean: distclean-mk clean clean-config

distclean-mk:
	-rm -f Makefile

version: $(MOD)/version.scm

modules: $(MOD_OBJ)/version.go $(mod-ofile)

test:
	@echo $(PREFIX)
	@echo $(MOD_COMPILED_PATH)
	@echo $(MOD_PATH)
	@echo $(CC)
	@echo $(CFLAGS)
	@echo $(GUILE)
	@echo $(VERSION)
	@echo $(LIBS)
	@echo $(mod-ofile)

docs: $(TEXI_SRC)
	$(CHK_TEXINFO)
	GENDOCS_TEMPLATE_DIR=$(BUILD_AUX) $(GENDOCS) --email bug-artanis@gnu.org -s $< -o $(MANUALS) "GNU Artanis Manual" --html --no-headers
	-rm -f ./*.{cp,ky,tp,aux,fn,log,pg,toc,vr}
